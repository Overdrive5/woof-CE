name: dpupos-rolling

on:
  schedule:
    - cron: '0 0 */3 * *'
  workflow_dispatch:
    branches:
      - dpupos
      - testing

jobs:
  x86_64:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources
        ln -s `basename $(pwd)`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-${{ github.job }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-local-repositories-
    - name: Prepare build environment
      run: docker run --rm -it --privileged -v /dev:/dev -v `pwd`/..:/tmp/share -e GITHUB_ACTIONS -w /tmp/share/`basename $(pwd)` -d --name builder ghcr.io/dpupos/container/dpupos:rolling
    - name: Fix cache ownership
      run: sudo chown -R root:root local-repositories
    - name: merge2out
      run: yes "" | docker exec builder ./merge2out woof-distro/x86_64/debian/dpupos
    - name: Set version
      run: sudo sed s/^DISTRO_VERSION=.*/DISTRO_VERSION=1/ -i ../woof-out_*/DISTRO_SPECS
    - name: Enable updates
      run: sudo sed 's/RELEASE_CHANNEL=.*/RELEASE_CHANNEL=beta/' -i ../woof-out_*/rootfs-packages/pm6_updater/etc/pm6_updater.conf
    - name: 0setup
      run: docker exec builder sh -c "cd ../woof-out_* && ./0setup"
    - name: 1download
      run: docker exec builder sh -c "cd ../woof-out_* && ./1download"
    - name: 2createpackages
      run: docker exec builder sh -c "cd ../woof-out_* && ./2createpackages"
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: kernel-kit.yml
        workflow_conclusion: success
        name: kernel-kit-output-5.10.x-x86_64
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-${{ github.job }}-petbuild-sources-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-petbuild-sources-
    - name: 3builddistro
      run: |
        sudo mv petbuild-sources ../woof-out_*/
        docker exec builder sh -c "cd ../woof-out_* && HOME=/root DISTRO_EXTRAVERSION=-rolling${{ github.run_number }} ./3builddistro release && rm -rf sandbox3"
    - name: Generate delta update
      run: |
        docker exec builder sh -c "./scripts/gen-tarball-delta.sh ${{ github.job }} ../woof-out_x86_64_x86_64_debian_dpupos/woof-output-dpupos-1/dpupos-1.tar dpupos-1-delta.tar"
        docker stop builder
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        release_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        body: dpup OS rolling build ${{ github.run_number }} for ${{ github.job }}
        draft: false
        prerelease: true
    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_64_debian_dpupos/woof-output-dpupos-1/dpupos-1.tar
        asset_name: dpupos-1.tar
        asset_content_type: application/octet-stream
    - name: Upload delta update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dpupos-1-delta.tar
        asset_name: dpupos-1-delta.tar
        asset_content_type: application/octet-stream
    - name: Compress UEFI image
      run: sudo gzip -1 ../woof-out_*/woof-output-*/*-ext4-2gb-uefi.img
    - name: Upload UEFI image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_64_debian_dpupos/woof-output-dpupos-1/dpupos-1-ext4-2gb-uefi.img.gz
        asset_name: dpupos-1-ext4-2gb-uefi.img.gz
        asset_content_type: application/octet-stream
    - name: Upload kernel sources
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_64_debian_dpupos/kernel-kit/output/kernel_sources-5.10-dpupos.sfs
        asset_name: kernel_sources-5.10-dpupos.sfs
        asset_content_type: application/octet-stream
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tag_pattern: dpupos-${{ github.job }}-1-rolling
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Move cached directories
      run: sudo mv ../woof-out_*/petbuild-sources .
  veyron-speedy:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources
        ln -s `basename $(pwd)`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-${{ github.job }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-local-repositories-
    - name: Prepare build environment
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends qemu-user-static binfmt-support
        docker run --rm -it --privileged -v /dev:/dev -v `pwd`/..:/tmp/share -e GITHUB_ACTIONS -w /tmp/share/`basename $(pwd)` -d --name builder ghcr.io/dpupos/container/dpupos:rolling
    - name: Fix cache ownership
      run: sudo chown -R root:root local-repositories
    - name: merge2out
      run: yes "" | docker exec builder ./merge2out woof-distro/arm/debian/dpupos-veyron-speedy
    - name: Set version
      run: sudo sed s/^DISTRO_VERSION=.*/DISTRO_VERSION=1/ -i ../woof-out_*/DISTRO_SPECS
    - name: Enable updates
      run: sudo sed 's/RELEASE_CHANNEL=.*/RELEASE_CHANNEL=beta/' -i ../woof-out_*/rootfs-packages/pm6_updater/etc/pm6_updater.conf
    - name: 0setup
      run: docker exec builder sh -c "cd ../woof-out_* && ./0setup"
    - name: 1download
      run: docker exec builder sh -c "cd ../woof-out_* && ./1download"
    - name: 2createpackages
      run: docker exec builder sh -c "cd ../woof-out_* && ./2createpackages"
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: kernel-kit.yml
        workflow_conclusion: success
        name: kernel-kit-output-5.4.x-veyron-speedy
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-${{ github.job }}-petbuild-sources-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-petbuild-sources-
    - name: 3builddistro
      run: |
        sudo mv petbuild-sources ../woof-out_*/
        docker exec builder sh -c "cd ../woof-out_* && HOME=/root DISTRO_EXTRAVERSION=-rolling${{ github.run_number }} ./3builddistro release && rm -rf sandbox3"
    - name: Generate delta update
      run: |
        docker exec builder sh -c "./scripts/gen-tarball-delta.sh ${{ github.job }} ../woof-out_x86_64_arm_debian_dpupos-veyron-speedy/woof-output-dpupos-1/dpupos-1.tar dpupos-1-delta.tar"
        docker stop builder
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        release_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        body: dpup OS rolling build ${{ github.run_number }} for ${{ github.job }}
        draft: false
        prerelease: true
    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_arm_debian_dpupos-veyron-speedy/woof-output-dpupos-1/dpupos-1.tar
        asset_name: dpupos-1.tar
        asset_content_type: application/octet-stream
    - name: Upload delta update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dpupos-1-delta.tar
        asset_name: dpupos-1-delta.tar
        asset_content_type: application/octet-stream
    - name: Compress image
      run: sudo gzip -1 ../woof-out_*/woof-output-*/*-ext4-2gb.img
    - name: Upload image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_arm_debian_dpupos-veyron-speedy/woof-output-dpupos-1/dpupos-1-ext4-2gb.img.gz
        asset_name: dpupos-1-ext4-2gb.img.gz
        asset_content_type: application/octet-stream
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tag_pattern: dpupos-${{ github.job }}-1-rolling
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Move cached directories
      run: sudo mv ../woof-out_*/petbuild-sources .
  x86:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources
        ln -s `basename $(pwd)`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-${{ github.job }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-local-repositories-
    - name: Prepare build environment
      run: docker run --rm -it --privileged -v /dev:/dev -v `pwd`/..:/tmp/share -e GITHUB_ACTIONS -w /tmp/share/`basename $(pwd)` -d --name builder ghcr.io/dpupos/container/dpupos:rolling
    - name: Fix cache ownership
      run: sudo chown -R root:root local-repositories
    - name: merge2out
      run: yes "" | docker exec builder ./merge2out woof-distro/x86/debian/dpupos
    - name: Set version
      run: sudo sed s/^DISTRO_VERSION=.*/DISTRO_VERSION=1/ -i ../woof-out_*/DISTRO_SPECS
    - name: Enable updates
      run: sudo sed 's/RELEASE_CHANNEL=.*/RELEASE_CHANNEL=beta/' -i ../woof-out_*/rootfs-packages/pm6_updater/etc/pm6_updater.conf
    - name: 0setup
      run: docker exec builder sh -c "cd ../woof-out_* && ./0setup"
    - name: 1download
      run: docker exec builder sh -c "cd ../woof-out_* && ./1download"
    - name: 2createpackages
      run: docker exec builder sh -c "cd ../woof-out_* && ./2createpackages"
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: kernel-kit.yml
        workflow_conclusion: success
        name: kernel-kit-output-5.10.x-x86
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-${{ github.job }}-petbuild-sources-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-${{ github.job }}-petbuild-sources-
    - name: 3builddistro
      run: |
        sudo mv petbuild-sources ../woof-out_*/
        docker exec builder sh -c "cd ../woof-out_* && HOME=/root DISTRO_EXTRAVERSION=-rolling${{ github.run_number }} ./3builddistro release && rm -rf sandbox3"
    - name: Generate delta update
      run: |
        docker exec builder sh -c "./scripts/gen-tarball-delta.sh ${{ github.job }} ../woof-out_x86_64_x86_debian_dpupos/woof-output-dpupos-1/dpupos-1.tar dpupos-1-delta.tar"
        docker stop builder
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        release_name: dpupos-${{ github.job }}-1-rolling${{ github.run_number }}
        body: dpup OS rolling build ${{ github.run_number }} for ${{ github.job }}
        draft: false
        prerelease: true
    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_debian_dpupos/woof-output-dpupos-1/dpupos-1.tar
        asset_name: dpupos-1.tar
        asset_content_type: application/octet-stream
    - name: Upload delta update
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dpupos-1-delta.tar
        asset_name: dpupos-1-delta.tar
        asset_content_type: application/octet-stream
    - name: Compress legacy image
      run: sudo gzip -1 ../woof-out_*/woof-output-*/*-ext4-2gb-legacy.img
    - name: Upload legacy image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_debian_dpupos/woof-output-dpupos-1/dpupos-1-ext4-2gb-legacy.img.gz
        asset_name: dpupos-1-ext4-2gb-legacy.img.gz
        asset_content_type: application/octet-stream
    - name: Upload kernel sources
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_debian_dpupos/kernel-kit/output/kernel_sources-5.10-dpupos.sfs
        asset_name: kernel_sources-5.10-dpupos.sfs
        asset_content_type: application/octet-stream
    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tag_pattern: dpupos-${{ github.job }}-1-rolling
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Move cached directories
      run: sudo mv ../woof-out_*/petbuild-sources .