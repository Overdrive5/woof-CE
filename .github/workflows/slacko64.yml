name: slacko64

on:
  pull_request:
    branches:
      - testing
    paths:
      - 'woof-distro/x86_64/slackware64/15.0/**'
  schedule:
    - cron: '0 0 * * 4'
  workflow_dispatch:

jobs:
  build:
    if: github.event_name != 'schedule' || (github.repository == 'puppylinux-woof-CE/woof-CE' && github.ref == 'refs/heads/testing')
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create cache directories
      run: |
        mkdir -p local-repositories petbuild-sources petbuild-cache petbuild-output
        ln -s `pwd`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-local-repositories-
    - name: Prepare build environment
      run: |
        [ -f local-repositories/vercmp ] || (curl https://raw.githubusercontent.com/puppylinux-woof-CE/initrd_progs/master/pkg/w_apps_static/w_apps/vercmp.c | gcc -x c -o ../local-repositories/vercmp -)
        sudo install -m 755 local-repositories/vercmp /usr/local/bin/vercmp
        sudo install -D -m 644 woof-code/rootfs-skeleton/usr/local/petget/categories.dat /usr/local/petget/categories.dat
        echo "dash dash/sh boolean false" | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
        sudo ln -s bash /bin/ash
    - name: merge2out
      run: yes "" | sudo -E ./merge2out woof-distro/x86_64/slackware64/15.0
    - name: 0setup
      run: |
        cd ../woof-out_*
        sudo -E ./0setup
    - name: 1download
      run: |
        cd ../woof-out_*
        sudo -E ./1download
    - name: 2createpackages
      run: |
        cd ../woof-out_*
        echo | sudo -E ./2createpackages
    - name: Get cached kernel-kit output
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: puppylinux-woof-CE/woof-CE
        branch: testing
        workflow: kernel-kit.yml
        workflow_conclusion: success
        name: kernel-kit-output-5.10.x-x86_64
        path: output
    - name: Move cached kernel-kit output
      run: sudo mv output ../woof-out_*/kernel-kit/
    - name: Get cached petbuild-sources
      uses: actions/cache@v2
      with:
        path: petbuild-sources
        key: ${{ github.workflow }}-petbuild-sources-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-sources-
    - name: Get cached petbuild-cache
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-cache
        key: ${{ github.workflow }}-petbuild-cache-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-cache-
    - name: Get cached petbuild-output
      if: github.event_name != 'workflow_dispatch'
      uses: actions/cache@v2
      with:
        path: petbuild-output
        key: ${{ github.workflow }}-petbuild-output-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-petbuild-output-
    - name: Install cdrtools
      run: |
        [ -f local-repositories/mkisofs ] || (curl -L https://sourceforge.net/projects/cdrtools/files/alpha/cdrtools-3.02a09.tar.bz2/download | tar -xjf- && cd cdrtools-3.02 && make -j`nproc` && mv mkisofs/OBJ/x86_64-linux-cc/mkisofs ../local-repositories/mkisofs)
        sudo install -m 755 local-repositories/mkisofs /usr/local/bin/mkisofs
    - name: 3builddistro
      run: |
        sudo chown -R root:root petbuild-output
        sudo mv petbuild-{sources,cache,output} ../woof-out_*/
        cd ../woof-out_*
        sudo -E HOME=/root ./3builddistro
        sudo mv -f woof-output-*/*.{sfs,iso} $GITHUB_WORKSPACE/
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.workflow }}-${{ github.run_number }}
        path: |
          *.iso
          *.sfs
        retention-days: 3