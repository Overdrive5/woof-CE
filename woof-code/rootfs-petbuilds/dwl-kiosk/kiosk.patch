From c0bb5943e0cd2b0e05b99297fedd39759151c6fa Mon Sep 17 00:00:00 2001
From: Dima Krasner <dima@dimakrasner.com>
Date: Sat, 2 Apr 2022 17:40:10 +0800
Subject: [PATCH] maximize the first window and make all others float

---
 dwl.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/dwl.c b/dwl.c
index 529dbf8..d82e3a7 100644
--- a/dwl.c
+++ b/dwl.c
@@ -207,6 +207,7 @@ static void applybounds(Client *c, struct wlr_box *bbox);
 static void applyexclusive(struct wlr_box *usable_area, uint32_t anchor,
 		int32_t exclusive, int32_t margin_top, int32_t margin_right,
 		int32_t margin_bottom, int32_t margin_left);
+static void center(Client *c, struct wlr_output *wlr_output);
 static void applyrules(Client *c);
 static void arrange(Monitor *m);
 static void arrangelayer(Monitor *m, struct wl_list *list,
@@ -449,6 +450,19 @@ applyexclusive(struct wlr_box *usable_area,
 	}
 }
 
+void
+center(Client *c, struct wlr_output *wlr_output)
+{
+	struct wlr_output_layout_output *ol_output = wlr_output_layout_get(output_layout, wlr_output);
+	if (!ol_output)
+		return;
+
+	c->geom.x = ol_output->x + wlr_output->width / wlr_output->scale / 2 - c->geom.width / 2;
+	c->geom.y = ol_output->y + wlr_output->height / wlr_output->scale / 2 - c->geom.height / 2;
+
+	wlr_scene_node_set_position(c->scene, c->geom.x, c->geom.y);
+}
+
 void
 applyrules(Client *c)
 {
@@ -457,6 +471,7 @@ applyrules(Client *c)
 	unsigned int i, newtags = 0;
 	const Rule *r;
 	Monitor *mon = selmon, *m;
+	Client *oc;
 
 	c->isfloating = client_is_float_type(c);
 	if (!(appid = client_get_appid(c)))
@@ -475,6 +490,15 @@ applyrules(Client *c)
 					mon = m;
 		}
 	}
+	c->isfullscreen = 1;
+	wl_list_for_each(oc, &clients, link) {
+		if (oc != c) {
+			c->isfloating = 1;
+			c->isfullscreen = 0;
+			center(c, mon->wlr_output);
+			break;
+		}
+	}
 	wlr_scene_node_reparent(c->scene, layers[c->isfloating ? LyrFloat : LyrTile]);
 	setmon(c, mon, newtags);
 }
